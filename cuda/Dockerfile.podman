# Usa un'immagine base con CUDA 12.4 e Ubuntu 22.04
FROM nvidia/cuda:12.4.0-devel-ubuntu22.04

# Imposta variabili d'ambiente
ENV DEBIAN_FRONTEND=noninteractive

# Installa GCC 12 e dipendenze di OpenCV
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    libgtk-3-dev \
    pkg-config \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    gcc-12 \
    g++-12 \
    libtbb2 \
    libtbb-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libxvidcore-dev \
    libx264-dev \
    libatlas-base-dev \
    gfortran \
    python3-dev \
    python3-numpy \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Imposta GCC 12 come compilatore predefinito
RUN ln -sf /usr/bin/gcc-12 /usr/bin/gcc && \
    ln -sf /usr/bin/g++-12 /usr/bin/g++

# Clona e compila OpenCV
WORKDIR /opencv
RUN git clone https://github.com/opencv/opencv.git && \
    git clone https://github.com/opencv/opencv_contrib.git && \
    mkdir build && \
    cd build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
          -D CMAKE_C_COMPILER=/usr/bin/gcc-12 \
          -D CMAKE_CXX_COMPILER=/usr/bin/g++-12 \
          -D WITH_CUDA=ON \
          -D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda \
          -D WITH_CUDNN=ON \
          -D OPENCV_DNN_CUDA=ON \
          -D BUILD_EXAMPLES=OFF \
          -D BUILD_opencv_python3=OFF \
          -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
          -D CUDA_ARCH_BIN=7.5;8.0;8.6;9.0 \
          .. && \
    make -j$(nproc) && \
    make install

# Imposta la directory di lavoro
WORKDIR /workspace

# all avio per gpu
# sudo chcon -t container_file_t /dev/nvidia*

# podman run --rm --security-opt=label=disable --device nvidia.com/gpu=all -it madtune/opencv-cuda:4.10.0

#starter
# podman run --rm --device nvidia.com/gpu=all -v /home/ped/Scrivania/UNI/SDM/Progetto/progetto/cuda/:/workspace:z -it madtune/opencv-cuda:4.10.0
# ultimo per compilare
# podman run --rm --device nvidia.com/gpu=all -v /home/ped/Scrivania/UNI/SDM/Progetto/progetto/cuda/:/workspace:z -it cuda12.4-gcc12-opencv-modified:v1
# per un aseesione grafica:
    #potrebbe essere necessario da terminale prima di lanciare il container
xhost +local:root

podman run --rm --device nvidia.com/gpu=all \
  -e DISPLAY=$DISPLAY \
  -v /tmp/.X11-unix:/tmp/.X11-unix \
  -v /home/ped/Scrivania/UNI/SDM/Progetto/progetto/cuda/:/workspace \
  --security-opt label=disable \
  -it cuda12.4-gcc12-opencv-modified:v1


  docker run --rm --gpus all -it \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY=$DISPLAY \
    -v /home/ped/Scrivania/UNI/SDM/Progetto/progetto/cuda/:/workspace \
    --name opencv_cuda_container \
    opencv_cuda_image:v1





# per compilare
# nvcc main.cu -o main $(pkg-config --cflags --libs opencv4)
# nvcc --arch=sm_61 -rdc=true -lcdudadevrt main.cu -o main $(pkg-config --cflags --libs opencv4)
